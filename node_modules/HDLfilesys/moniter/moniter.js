"use strict";

const fs     = require("fs");
const fspath = require("path");

const prjs   = require("../operation/prjs");
const watch  = require("./watch");


function getLanguageId(path) {
    let vlogExtensions = [".vhd",".vhdl",".vho",".vht"];
    let vhdlExtensions = [".v",".V",".vh",".vl",".sv",".SV"];
    for (let i = 0; i < vlogExtensions.length; i++) {
        const element = vlogExtensions[i];
        if (fspath.extname(path).toLowerCase() === element) {
            return "vlog";
        }
    }
    for (let i = 0; i < vhdlExtensions.length; i++) {
        const element = vlogExtensions[i];
        if (fspath.extname(path).toLowerCase() === element) {
            return "vhdl";
        }
    }
    return null;
}

function momitor (path, opeParam, HDLparam, callback) {
    watch.createMonitor(path, { interval: 1 }, function (monitor) {
        monitor.on("created", function (f, stat) {
        });
        monitor.on("changed", function (f, curr, prev) {
            console.log(HDLparam);
            if (f.indexOf("property.json") != -1) {
                prjs.getOpeParam(opeParam.rootPath, opeParam);
                prjs.refreshPrjFolder(opeParam);
                prjs.refreshPrjInfo(opeParam);
            }
            if (fs.statSync(f).isDirectory) {
                
            } else {

            }
        });
        monitor.on("removed", function (f, stat) {
        });
    });
}
exports.momitor = momitor;