"use strict";

const fs = require("fs");
const fspath = require("path");

function mkdir(path) {
    if (fs.existsSync(path)) {
      return true;
    } 
    else { 
        if (mkdir(fspath.dirname(path))) {
            fs.mkdirSync(path);
            return true;
        }
    }
}
exports.mkdir = mkdir;

function deleteDir(path){
    let files = [];
    if( fs.existsSync(path) ) {  
        files = fs.readdirSync(path);   
        files.forEach(element => {
            let curPath = fspath.join(path,element).replace(/\\/g,"\/");
            if(fs.statSync(curPath).isDirectory()) { 
                deleteDir(curPath);
            } else {    
                fs.unlinkSync(curPath);    
            }
        });
        fs.rmdirSync(path); //清除文件夹
    }
}
exports.deleteDir = deleteDir;

function movedir(oldpath,newpath) {
    let folder  = fspath.basename(oldpath);
    newpath = newpath + '/' + folder;
    if (fs.existsSync(oldpath)) {
        if (fs.existsSync(newpath)) {
            deleteDir(newpath);
        }
        fs.renameSync(oldpath,newpath);
    }else{
        mkdir(newpath);	
    }
}
exports.movedir = movedir;

function copydir(src, dist, callback) {
    fs.access(dist, function(err){
      if(err){
        fs.mkdirSync(dist);
      }
      _copy(null, src, dist);
    });
  
    function _copy(err, src, dist) {
      if(err){
        callback(err);
      } else {
        fs.readdir(src, function(err, paths) {
          if(err){
            callback(err)
          } else {
            paths.forEach(function(path) {
              var _src = src + '/' +path;
              var _dist = dist + '/' +path;
              fs.stat(_src, function(err, stat) {
                if(err){
                  callback(err);
                } else {
                  if(stat.isFile()) {
                    fs.writeFileSync(_dist, fs.readFileSync(_src));
                  } else if(stat.isDirectory()) {
                    copyDir(_src, _dist, callback)
                  }
                }
              })
            })
          }
        })
      }
    }
}
exports.copydir = copydir;

function readFolder(path) {
    return fs.readdirSync(path);
}
exports.readFolder = readFolder;