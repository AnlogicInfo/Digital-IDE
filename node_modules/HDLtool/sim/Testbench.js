"use strict";

const fs       = require("fs");
const vscode   = require("vscode");
const parser   = require("HDLparser");
const instance = require("./Instance");

function genInstancetoTbFile(HDLparam, tbFilePath) {
    var doc = vscode.window.activeTextEditor.document;
    parser.simParser.selectCurrentFileModule(HDLparam, doc).then(selectModule => {
        if (selectModule != null) {            
            if (doc.languageId == "systemverilog" || doc.languageId == "verilog") {
                let inst = instance.instantiateVlogModule(selectModule);
                appiontInsert(findInstLocale(tbFilePath), inst);
            } else if (doc.languageId == "vhdl") {
                // TODO 完成vhdl的例化
            }
        }
    })
}
exports.genInstancetoTbFile = genInstancetoTbFile;

function appiontInsert(position, content) {
    const editor = vscode.window.activeTextEditor;
    if (editor === undefined) {
        return;
    }
    
    editor.edit((editBuilder) => {
        editBuilder.insert(position, content);
    });
}
exports.appiontInsert = appiontInsert;

function findInstLocale(tbFilePath) {
    let InstLocale = 0;
    let content = fs.readFileSync(tbFilePath);
    let lines = content.split('\n');
    for (let index = 0; index < lines.length; index++) {
        const line = lines[index];
        if (line.indexOf("//Instance ") == -1) {
            InstLocale++;
        } else {
            break;
        }
    }
    return new vscode.Position(InstLocale, 0)
}